/*
	Author: Karel Moricky

	Description:
	Export function descriptions to Community Wiki.
	Exported text will be copied to clipboard in XML format.
	Import it to wiki using https://community.bistudio.com/wiki?title=Special:Import
	If the page already exists, it will be replaced only when timestamp is newer.

	Parameter(s):
		0: ARRAY - functions filter in format [<tags>,<categories>,<functions>]
			tags: STRING or ARRAY of STRINGs - CfgFunctions tags (e.g., "BIS"). Use empty string for all of them.
			categories: STRING or ARRAY of STRINGs - categories (e.g., "Debug"). Use empty string for all of them.
			functions: STRING or ARRAY of STRINGs - specific function names (e.g., "BIS_fnc_log"). Use empty string for all of them.
		1 (Optional) STRING - timestamp in format "2013-09-12T16:00:00Z"

	Returns:
	STRING - exported text

	Example:
	Export all functions:		[] spawn bis_fnc_exportFunctionsToWiki;
	Export all Array functions:	["","Arrays"] spawn bis_fnc_exportFunctionsToWiki;
	Export specific functions:	["","",["BIS_fnc_log","BIS_fnc_param"]] spawn bis_fnc_exportFunctionsToWiki;
*/

startloadingscreen [""];

_path = [_this,0,[],[[]]] call bis_fnc_param;
_pathTags = [_path,0,[],[[],""]] call bis_fnc_paramin;
_pathCategories = [_path,1,[],[[],""]] call bis_fnc_paramin;
_pathFunctions = [_path,2,[],[[],""]] call bis_fnc_paramin;

_timestamp = [_this,1,"2006-04-03T17:42:00Z",[""]] call bis_fnc_param; //--- Time when Biki was created, ain't nothing older

if (typename _pathTags == typename "") then {_pathTags = [_pathTags];};
if (typename _pathCategories == typename "") then {_pathCategories = [_pathCategories];};
if (typename _pathFunctions == typename "") then {_pathFunctions = [_pathFunctions];};

_allTags = {_x != ""} count _pathTags == 0;
_allCategories = {_x != ""} count _pathCategories == 0;
_allFunctions = {_x != ""} count _pathFunctions == 0;

_fnc_addLine = {
	for "_t" from 1 to _indent do {_text = _text + "	";};
	_text = _text + _this + _br;
};

_br = tostring [13,10];
_lt = toarray "<" select 0;
_gt = toarray ">" select 0;
_amp = toarray "&" select 0;
_ltArray = toarray "&lt;";
_gtArray = toarray "&gt;";
_ampArray = toarray "&amp;";
_indent = 0;
_text = "";
_cfgRoot = configfile >> "cfgfunctions";
_projects = ["arma2","arma2oa","tkoh","arma3"];

//--- Header
"<mediawiki xml:lang=""en"">" call _fnc_addLine;
_indent = 1;

_functionsList = call (uinamespace getvariable ["BIS_functions_list",{[]}]);
_functionsListCount = count _functionsList;
{
	_function = _x;
	_meta = _x call bis_fnc_functionmeta;
	_metaPath = _meta select 0;
	_metaFormat = _meta select 1;
	_metaTag = _meta select 6;
	_metaCategory = _meta select 7;
	_metaName = _meta select 8;

	if (
		(_allTags || {{_metaTag == _x} count _pathTags > 0})
		&&
		{_allCategories || {{_metaCategory == _x} count _pathCategories > 0}}
		&&
		{_allFunctions || {{_function == _x} count _pathFunctions > 0}}
	) then {
		//--- Get header
		_file = loadfile _metaPath;
		_fileArray = toarray _file;
		_fileCode = preprocessfile _metaPath;
		_fileCodeArray = toarray _fileCode;
		_rowComment = 0;
		{
			if (_x != 10) exitwith {_rowComment = _foreachindex;};
		} foreach _fileCodeArray;
		_row = 0;
		_rowTextArray = [];
		_fileHeader = "";
		{
			_chars = switch true do {
				case (_x == _lt): {_ltArray};
				case (_x == _gt): {_gtArray};
				case (_x == _amp): {_ampArray};
				default {[_x]};
			};
			{_rowTextArray pushback _x} foreach _chars;
			if (_x == 10) then {
				_rowText = tostring (_rowTextArray);
				_rowTextArray = [];
				if !(["author:",_rowText] call bis_fnc_instring) then {_fileHeader = _fileHeader + _rowText;};
				_row = _row + 1;
			};
			if (_row == _rowComment) exitwith {_fileArray resize _foreachindex;};
		} foreach _fileArray;
		if (["#include",_fileHeader] call bis_fnc_instring) then {_fileHeader = "";}; //--- Ignore when confused by macro file

		_description = if (_fileHeader == "" || _metaFormat != ".sqf") then {"''N/A''"} else {format ["&lt;pre&gt;%1&lt;/pre&gt;&lt;small&gt;''(Placeholder description extracted from the function header by [[BIS_fnc_exportFunctionsToWiki]])''&lt;/small&gt;",_fileHeader]};

		_project = gettext (_cfgRoot >> _metaTag >> "project");
		if (_project == "") then {_project = tolower (productversion select 1)};

		//--- Export
		"<page>" call _fnc_addLine;
		_indent = 2;

		format ["<title>%1</title>",_function] call _fnc_addLine;
		"<revision>" call _fnc_addLine;
		_indent = 3;

		format ["<timestamp>%1</timestamp>",_timestamp] call _fnc_addLine; //---- Arma 3 release date
		"<contributor></contributor>" call _fnc_addLine;
		"<comment>Generated by BIS_fnc_exportFunctionsToWiki</comment>" call _fnc_addLine;

		//--- Exported text
		"<text>" call _fnc_addLine;
		_indent = 0;

		//--- Function template
		"{{Function|= Comments" call _fnc_addLine;
		"____________________________________________________________________________________________" call _fnc_addLine;
		"" call _fnc_addLine;
		format ["| %1 |= Game name",_project] call _fnc_addLine;
		"" call _fnc_addLine;
		"|1.00|= Game version" call _fnc_addLine;
		"____________________________________________________________________________________________" call _fnc_addLine;
		"" call _fnc_addLine;
		format ["| %1 |= Description",_description] call _fnc_addLine;
		"____________________________________________________________________________________________" call _fnc_addLine;
		"" call _fnc_addLine;
		format ["| &lt;!-- [] call [[%1]]; --&gt; |= Syntax",_function] call _fnc_addLine;
		"" call _fnc_addLine;
		"|p1= |= Parameter 1" call _fnc_addLine;
		"" call _fnc_addLine;
		"| |= Return value" call _fnc_addLine;
		"____________________________________________________________________________________________" call _fnc_addLine;
		"" call _fnc_addLine;
		"|x1= &lt;code&gt;&lt;/code&gt; |= " call _fnc_addLine;
		"____________________________________________________________________________________________" call _fnc_addLine;
		"" call _fnc_addLine;
		"| |= See also" call _fnc_addLine;
		"" call _fnc_addLine;
		"}}" call _fnc_addLine;
		"" call _fnc_addLine;
		"&lt;h3 style=""display:none""&gt;Notes&lt;/h3&gt;" call _fnc_addLine;
		"&lt;dl class=""command_description""&gt;" call _fnc_addLine;
		"&lt;!-- Note Section BEGIN --&gt;" call _fnc_addLine;
		"" call _fnc_addLine;
		"&lt;!-- Note Section END --&gt;" call _fnc_addLine;
		"&lt;/dl&gt;" call _fnc_addLine;
		"" call _fnc_addLine;
		"&lt;h3 style=""display:none""&gt;Bottom Section&lt;/h3&gt;" call _fnc_addLine;

		//--- Categories
		format ["[[Category:Function Group: %2|{{uc:%1}}]]",_metaName,_metaCategory] call _fnc_addLine;
		format ["[[Category:Functions|{{uc:%1}}]]",_metaName] call _fnc_addLine;
		_compatible = false;
		{
			if (_x == _project) then {_compatible = true;};
			if (_compatible) then {
				format ["[[Category:{{Name|%2}}: Functions|{{uc:%1}}]]",_metaName,_x] call _fnc_addLine;
			};
		} foreach _projects;

		_indent = 3;
		"</text>" call _fnc_addLine;
		"<minor/>" call _fnc_addLine;

		_indent = 2;
		"</revision>" call _fnc_addLine;

		_indent = 1;
		"</page>" call _fnc_addLine;
	};
	progressloadingscreen (_foreachindex / _functionsListCount);
} foreach _functionsList;

//--- Footer
_indent = 0;
"</mediawiki>" call _fnc_addLine;
endloadingscreen;

copytoclipboard _text;
_text